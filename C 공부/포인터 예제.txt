----------------------------------------void 포인터를 이용한 swap------------------------------------------

#include <stdio.h>
#include <string.h>

void swap(char* type, void* a, void* b);

int main(void)
{
	int ia = 10; 
	int ib = 20;
	char ca[10] = "yangsemin";
	char cb[10] = "kimjungho";

	printf("swap 전\n");

	printf("a == %d\nb == %d\n", ia, ib);
	printf("a == %s\nb == %s\n\n", ca, cb);

	printf("swap 후\n");

	swap("int", &ia, &ib);
	printf("a == %d\nb == %d\n", ia, ib);

	swap("char", ca, cb);
	printf("a == %s\nb == %s\n", ca, cb);

	return 0;
}

void swap(char* type, void* a, void* b)
{
	int it;
	char ct;

	if (strcmp(type, "int") == 0)
	{
		it = *(int*)a;
		*(int*)a = *(int*)b;
		*(int*)b = it;
	}
	else if (strcmp(type, "char") == 0)
	{
		for (int i = 0; i < 10; i++)
		{
			ct = ((char*)a)[i];
			((char*)a)[i] = ((char*)b)[i];
			((char*)b)[i] = ct;
		}
	}
}

-----------------------------------------함수 포인터를 이용한 홀짝 계산---------------------------------------------

#include <stdio.h>

int odd(int value);
int even(int value);
void count(int* a, int size, int (*p)(int));

int main(void)
{
	int a[10] = { 1,2,3,4,5,6,7,8,9,10 };

	printf("짝수 : ");
	count(a, 10, odd);
	
	printf("\n");

	printf("홀수 : ");
	count(a, 10, even);

	return 0;
}

void count(int* a, int size, int (*p)(int))
{
	for (int i = 0; i < size; i++)
	{
		if (p(a[i]))
		{
			printf("%d ", a[i]);
		}
	}
}

int odd(int value)
{
	if (value % 2 == 0)
	{
		return 1;
	}
	return 0;
}

int even(int value)
{
	if (value % 2 == 1)
	{
		return 1;
	}
	return 0;
}

----------------------------------------이중 포인터 예제-----------------------------------

#include <stdio.h>

int main(void)
{
	int a = 10;
	int* p = &a;
	int** pp = &p;

	printf("%d\n", a);
	printf("%d\n", &a);
	printf("%d\n", p);
	printf("%d\n", &p);
	printf("%d\n", *p);
	printf("%d\n", pp);
	printf("%d\n", &pp);
	printf("%d\n", *pp);
	printf("%d\n", **pp);

	return 0;
}